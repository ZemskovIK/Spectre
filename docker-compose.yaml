services:
  crypto:
    container_name: SpectreCrypto
    build:
      context: ./services/crypto
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${CRYPTO_PORT}:${CRYPTO_PORT}"
    command: sh -c "gunicorn --bind 0.0.0.0:${CRYPTO_PORT} server:app --workers 3"
    restart: always
    networks:
      custom_network:
        ipv4_address: 10.12.0.11
  
  spectre:
    container_name: SpectreBase
    build:
      context: ./services/spectre
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${SPECTRE_PORT}:${SPECTRE_PORT}"
    command: >
      sh -c "touch /spectre/db/spec.db && cd /spectre/bin && /spectre/bin/migrator -action up && /spectre/bin/spectre"
    depends_on:
      - crypto
    restart: always
    networks:
      custom_network:
        ipv4_address: 10.12.0.12
  
  web_client:
    container_name: SpectreWebClient
    build:
      context: ./client/web
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${WEBCLIENT_PORT}:${WEBCLIENT_PORT}"
    command: >
      sh -c "npm run dev -- --host 0.0.0.0 --port ${WEBCLIENT_PORT}"
    depends_on:
      - crypto
      - spectre
    restart: always
    networks:
      custom_network:
        ipv4_address: 10.12.0.13

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      custom_network:
        ipv4_address: 10.12.0.14

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    volumes:
      - ./blackbox.yml:/etc/blackbox_exporter/config.yml
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    ports:
      - "9115:9115"
    networks:
      custom_network:
        ipv4_address: 10.12.0.15
    
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      custom_network:
        ipv4_address: 10.12.0.16

volumes:
  grafana_data:

networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.12.0.0/24